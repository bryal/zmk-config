/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define WORKGIRL 0
#define QWERTY 1
#define GAME 2
#define SYMB 3
#define FUNC 4

&left_encoder { resolution = <2>; };
&right_encoder { resolution = <2>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <350>;
            bindings = <&to WORKGIRL>, <&to QWERTY>, <&to GAME>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB  &kp Q &kp D &kp R &kp W &kp B                                       &kp J &kp F  &kp U     &kp P   &kp SEMI &kp MINUS
&kp ESC  &kp A &kp S &kp H &kp T &kp G                                       &kp Y &kp N  &kp E     &kp O   &kp I    &kp SQT
&kp LGUI &kp Z &kp X &kp M &kp C &kp V &kp CAPS &td0        &kp DEL &kp BSPC &kp K &kp L  &kp COMMA &kp DOT &kp FSLH &kp BSLH
   &kp PSCRN &kp LC(LALT) &kp LALT &kp LCTRL &kp RET        &kp SPACE &kp LSHFT &mo SYMB &mo FUNC &kp C_PLAY_PAUSE
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_DN C_BRI_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        qwerty_layer {
            bindings = <
&trans &kp Q &kp W &kp E &kp R &kp T                                    &kp Y &kp U &kp I     &kp O   &kp P    &kp MINUS
&trans &kp A &kp S &kp D &kp F &kp G                                    &kp H &kp J &kp K     &kp L   &kp SEMI &kp SQT
&trans &kp Z &kp X &kp C &kp V &kp B &trans &trans        &trans &trans &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp BSLH
                &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
            >;
        };

        game_layer {
            bindings = <
&trans &kp N1    &kp Q &kp W &kp E &kp R                                   &kp PG_UP &kp HOME &kp UP   &kp END   &trans &trans
&trans &kp LSHFT &kp A &kp S &kp D &kp F                                   &kp PG_UP &kp LEFT &kp DOWN &kp RIGHT &trans &trans
&trans &kp LCTRL &kp Z &kp X &kp C &kp V &kp T &trans        &trans &trans &trans &trans &trans &trans &trans &trans
               &kp G &kp N2 &kp N3 &kp LALT &kp SPACE        &trans &trans &trans &trans &trans
            >;
        };

        symb_layer {
            bindings = <
&trans &kp EXCL &kp LBRC &kp RBRC &kp DLLR  &kp GRAVE                                       &kp AMPS  &kp N7 &kp N8 &kp N9 &kp EQUAL     &kp PLUS
&trans &kp AT   &kp LPAR &kp RPAR &kp PRCNT &kp TILDE                                       &kp ASTRK &kp N4 &kp N5 &kp N6 &kp N0        &kp RA(DQT)
&trans &kp HASH &kp LBKT &kp RBKT &kp CARET &kp RA(EXCL) &trans &trans        &trans &trans &kp SPACE &kp N1 &kp N2 &kp N3 &kp RA(QMARK) &kp RA(SQT)
                                    &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(C_PREV) LG(C_NEXT)>;
        };

        func_layer {
            bindings = <
&trans &trans &trans &bt BT_PRV &bt BT_NXT &bt BT_CLR                              &kp PG_UP &kp HOME &kp UP   &kp END   &trans    &kp RA(W)
&trans &trans &trans &trans     &trans     &bt BT_SEL 0                            &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp RA(P) &kp RA(Q)
&kp F1 &kp F2 &kp F3 &kp F4     &kp F5     &kp F6 &trans &trans      &trans &trans &kp F7    &kp F8   &kp F9   &kp F10   &kp F11   &kp F12
                             &trans &trans &trans &trans &trans      &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp C_PREV C_NEXT>;
        };
    };
};
